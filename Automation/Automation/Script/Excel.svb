'USEUNIT qaUtil
'USEUNIT qaGlobalVar
Sub Fun
  Call TestCreateLogArray
  Call Demo
End Sub

Sub TestCreateLogArray
  Call CreateArrLog
  Call LogReportInArray("Log Report If Object Repository is successfully created.,Object Repository is successfully created for ,PASS,Null")
  Call LogReportInArray("Log Report If Test Cases is successfully loaded in Memory.,Test Cases is successfully loaded in Memory for ,PASS,Null")

  For Index = 1 To 10
    Call LogReportInArray("Test Case" & Index & ",REPORT:5132,START,33")
    Call LogReportInArray("PASS,PASS,PASS,Null")
    Call LogReportInArray("PASS,PASS,FAIL,Null")
    Call LogReportInArray("PASS,PASS,SKIP,Null")
    Call LogReportInArray("Test Case" & Index & ",REPORT:5132,END,44")
  Next
  
  Call CreateXSLLogFile
   Dim StartTime, EndTime,Difference,Index
   StartTime = aqDateTime.Time 
  For Each strItem in qaGlobalVar.ARRLOG
    aqString.ListSeparator = ","
	  aqString.GetListLength(strItem)
    Call LogReport(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN, aqString.GetListItem(strItem,0),aqString.GetListItem(strItem,1) , aqString.GetListItem(strItem,2) , aqString.GetListItem(strItem,3))
  Next
  EndTime = aqDateTime.Time
  Difference = aqDateTime.TimeInterval(StartTime, EndTime)
  Log.Message("TestCreateLogArray: The interval in Days:Hours:Minutes:Seconds format: " + aqConvert.TimeIntervalToStr (Difference) )
End Sub

Function CreateArrLog 
  CreateArrLog = False
  Set qaGlobalVar.ARRLOG = CreateObject("System.Collections.ArrayList")
  IF NOT(qaGlobalVar.ARRLOG Is Nothing)Then
    CreateArrLog = True
  Else
    CreateArrLog = False
  End IF
End Function

Sub LogReportInArray(Message)
  IF NOT(qaGlobalVar.ARRLOG Is Nothing)Then
    qaGlobalVar.ARRLOG.Add Message
  Else
    Log.Error"Error"
    Exit Sub
  End IF
End Sub

Sub Demo
  Dim StartTime, EndTime,Difference,Index
  StartTime = aqDateTime.Time

  Call CreateXSLLogFile
  
  Call LogReport(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN,"Log Report If Object Repository is successfully created.","Object Repository is successfully created for " & qaGlobalVar.SUITETORUN,"PASS",Null)
  Call LogReport(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN,"Log Report If Test Cases is successfully loaded in Memory.","Test Cases is successfully loaded in Memory for " & qaGlobalVar.SUITETORUN,"PASS",Null)  
 
  For Index = 1 To 10
    Call LogReport(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN,"Test Case" & Index,"REPORT:5132","START",33)
    Call LogReport(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN,"PASS","PASS","PASS",Null)
    Call LogReport(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN,"PASS","PASS","FAIL",Null)
    Call LogReport(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN,"PASS","PASS","SKIP",Null)
    Call LogReport(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN,"Test Case" & Index,"REPORT:5132","END",44)
  Next
  
  EndTime = aqDateTime.Time
  Difference = aqDateTime.TimeInterval(StartTime, EndTime)
  Log.Message("Demo: The interval in Days:Hours:Minutes:Seconds format: " + aqConvert.TimeIntervalToStr (Difference) )
End Sub

Function CreateXSLLogFile
  Dim TimeStamp
  
  CreateLogFile = False
  TimeStamp =  qaUtil.GetTimestamp()
  
  qaGlobalVar.REPORTPATH = Project.Path + "TestResults\" & qaGlobalVar.SUITETORUN & "#_Results_" & TimeStamp & ".xlsx"

  Call qaUtil.closeOpenApp("excel")
    
  Set xlobj = Createobject("Excel.Application")
  xlobj.Visible= True   
  xlobj.Workbooks.Add
    
  Set workBookObj=xlobj.Workbooks(1)
  workBookObj.SaveAs qaGlobalVar.REPORTPATH
  xlobj.Quit
    
  Set workBookObj = Nothing
  Set xlobj = Nothing
  If aqFileSystem.Exists(qaGlobalVar.REPORTPATH) Then
    Call CreateXSLLogSheet(qaGlobalVar.REPORTPATH,qaGlobalVar.SUITETORUN,1)
    CreateXSLLogFile = True
  Else
    CreateXSLLogFile = False
  End If 
End Function

Sub CreateXSLLogSheet(ReportPath,SheetName,AppIndex)
  Dim xlobj, bookObj, wsheetObj, objRange
  
  Set xlobj =  Createobject("Excel.Application")
  Set bookObj = xlobj.Workbooks.Open(ReportPath)
  
  if AppIndex > 3 then
    call bookObj.Sheets.Add(, bookObj.Sheets(bookObj.Sheets.Count))
  end if
    
  bookObj.Worksheets(AppIndex).name = SheetName
    
  Set wsheetObj = bookObj.Worksheets(SheetName)
    
'  wsheetObj.cells(1,1) = "Step Name"
'  wsheetObj.cells(1,1).font.bold = True
'  wsheetObj.cells(1,1).font.Color = vbWhite
'  wsheetObj.cells(1,1).interior.ColorIndex  = 9
'    
'  wsheetObj.cells(1,2) = "Message"
'  wsheetObj.cells(1,2).font.bold = True
'  wsheetObj.cells(1,2).font.Color = vbWhite
'  wsheetObj.cells(1,2).interior.ColorIndex  = 9
'    
'  wsheetObj.cells(1,3) = "Status"
'  wsheetObj.cells(1,3).font.bold = True
'  wsheetObj.cells(1,3).font.Color = vbWhite
'  wsheetObj.cells(1,3).interior.ColorIndex  = 9
'
'  Set objRange = wsheetObj.UsedRange
'  objRange.EntireColumn.Autofit()
  
  bookObj.Save
  xlobj.Quit
  
  Set bookObj = Nothing
  Set xlobj = Nothing
End Sub

Sub LogReport(ReportPath,SheetName,StepName,Message,Status,ColorIndex)

  Dim xlobj, bookObj, wsheetObj, objRange, RowCount, NextRow
  
  Set xlobj =  Createobject("Excel.Application")
  Set bookObj = xlobj.Workbooks.Open(ReportPath)
  Set wsheetObj = bookObj.Worksheets(SheetName)
  
  RowCount = wsheetObj.usedrange.rows.count
  NextRow = RowCount + 1
  
  wsheetObj.cells(NextRow,1) = aqString.Trim(StepName)
  wsheetObj.cells(NextRow,2) = aqString.Trim(Message)
  wsheetObj.cells(NextRow,3) = aqString.Trim(aqString.ToUpper(Status))
  
  Select Case aqString.ToUpper(Status)
		Case "PASS"  
      wsheetObj.cells(NextRow,3).font.ColorIndex = 10
		Case "FAIL"   
      wsheetObj.cells(NextRow,3).font.ColorIndex = 3
    Case "SKIP"   
      wsheetObj.cells(NextRow,3).font.color = vbblack
		Case Else     
      wsheetObj.cells(NextRow,3).font.color = vbblack
	End Select
  
  
  IF ColorIndex <> "Null" Then
    wsheetObj.cells(NextRow,1).Interior.ColorIndex = ColorIndex
    wsheetObj.cells(NextRow,2).Interior.ColorIndex = ColorIndex
    wsheetObj.cells(NextRow,3).Interior.ColorIndex = ColorIndex
  END IF
  
  
  wsheetObj.cells(NextRow,3).font.bold = True
	wsheetObj.Range("A:C").Columns.AutoFit
  
  RowCount = wsheetObj.usedrange.rows.count
  
	wsheetObj.Range(wsheetObj.cells(1,1),wsheetObj.cells(RowCount,3)).Borders.LineStyle = 1
	wsheetObj.Range(wsheetObj.cells(1,1),wsheetObj.cells(RowCount,3)).Borders.color = RGB(0,0,0)
	wsheetObj.Range(wsheetObj.cells(1,1),wsheetObj.cells(RowCount,3)).Borders.Weight = 2
  
  bookObj.Save
  xlobj.Quit
  
  Set bookObj = Nothing
  Set xlobj = Nothing
End Sub


Sub TimeIntervalDemo
  Dim Time1, Time2, Difference 
  Time1 = aqDateTime.Time()
  Time2 = aqDateTime.AddTime(Time1,1,0,0,5)
  Difference = aqDateTime.TimeInterval(Time1, Time2) 
  Log.Message("The interval as DateTime: " + aqConvert.DateTimeToStr(Difference))
  ' Posts "The interval as DateTime: 12/31/1899 12:00:05 AM"
  Log.Message("The interval in Days:Hours:Minutes:Seconds format: " + aqConvert.TimeIntervalToStr (Difference))
  ' Posts "The interval in Days:Hours:Minutes:Seconds format: 1:00:00:05"
End Sub